;; Analyzed by ClojureScript 1.7.48
{:use-macros {require cljs.node-macros}, :excludes #{}, :name cljs.node, :imports nil, :requires nil, :uses nil, :defs {log {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/out/cljs/node.cljs", :line 4, :column 7, :end-line 4, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.node/log, :variadic true, :file "out/cljs/node.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, on-node? {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/out/cljs/node.cljs", :line 6, :column 7, :end-line 6, :end-column 15, :arglists (quote ([]))}, :name cljs.node/on-node?, :variadic false, :file "out/cljs/node.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.node-macros cljs.node-macros}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}