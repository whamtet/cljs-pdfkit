;; Analyzed by ClojureScript 1.7.48
{:use-macros {defroutes dogfort.middleware.routes-macros, POST dogfort.middleware.routes-macros, let-realised redlobster.macros, promise redlobster.macros, ANY dogfort.middleware.routes-macros, GET dogfort.middleware.routes-macros}, :excludes #{}, :name cljs-pdfkit-demo.core, :imports nil, :requires {redlobster.promise redlobster.promise, cljs-pdfkit.core cljs-pdfkit.core, dogfort.middleware.defaults dogfort.middleware.defaults, redlobster.stream redlobster.stream, promise redlobster.promise, dogfort.middleware.routes dogfort.middleware.routes, cljs.nodejs cljs.nodejs, dogfort.http dogfort.http, cljs-pdfkit cljs-pdfkit.core, defaults dogfort.middleware.defaults, stream redlobster.stream, cljs.reader cljs.reader}, :uses {run-http dogfort.http}, :defs {redirect {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 18, :column 7, :end-line 18, :end-column 15, :arglists (quote ([location]))}, :name cljs-pdfkit-demo.core/redirect, :variadic false, :file "src/cljs_pdfkit_demo/core.cljs", :end-column 15, :method-params ([location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([location]))}, waiting-pdfs {:name cljs-pdfkit-demo.core/waiting-pdfs, :file "src/cljs_pdfkit_demo/core.cljs", :line 23, :column 1, :end-line 23, :end-column 18, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 23, :column 6, :end-line 23, :end-column 18}}, add-waiting-pdf {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 24, :column 7, :end-line 24, :end-column 22, :arglists (quote ([pdf]))}, :name cljs-pdfkit-demo.core/add-waiting-pdf, :variadic false, :file "src/cljs_pdfkit_demo/core.cljs", :end-column 22, :method-params ([pdf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pdf]))}, get-waiting-pdf {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([sym]))}, :name cljs-pdfkit-demo.core/get-waiting-pdf, :variadic false, :file "src/cljs_pdfkit_demo/core.cljs", :end-column 22, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym]))}, handler {:name cljs-pdfkit-demo.core/handler, :file "src/cljs_pdfkit_demo/core.cljs", :line 38, :column 1, :end-line 38, :end-column 19, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 38, :column 12, :end-line 38, :end-column 19}}, main {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/src/cljs_pdfkit_demo/core.cljs", :line 60, :column 7, :end-line 60, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs-pdfkit-demo.core/main, :variadic true, :file "src/cljs_pdfkit_demo/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros {dogfort.middleware.routes-macros dogfort.middleware.routes-macros, redlobster.macros redlobster.macros, cljs-pdfkit cljs-pdfkit.core, cljs-pdfkit.core cljs-pdfkit.core}, :cljs.analyzer/constants {:seen #{:get :wrap-file :params :port :sym :headers :status :edn :body :end-stream?}, :order [:status :body :headers :params :edn :get :sym :end-stream? :wrap-file :port]}, :doc nil}