;; Analyzed by ClojureScript 1.7.48
{:name redlobster.http, :doc nil, :excludes #{}, :use-macros {let-realised redlobster.macros, promise redlobster.macros}, :require-macros {n cljs.node-macros, cljs.node-macros cljs.node-macros, redlobster.macros redlobster.macros}, :uses {log cljs.node}, :requires {e redlobster.events, redlobster.events redlobster.events, p redlobster.promise, redlobster.promise redlobster.promise, s redlobster.stream, redlobster.stream redlobster.stream, cljs.node cljs.node}, :imports nil, :defs {http {:name redlobster.http/http, :file "out/redlobster/http.cljs", :line 9, :column 1, :end-line 9, :end-column 23, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/out/redlobster/http.cljs", :line 9, :column 19, :end-line 9, :end-column 23}}, request {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-pdfkit/cljs-pdfkit-demo/out/redlobster/http.cljs", :line 11, :column 7, :end-line 11, :end-column 14, :arglists (quote ([options body] [options])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([options body] [options]), :arglists ([options body] [options]), :arglists-meta (nil nil)}}, :name redlobster.http/request, :variadic false, :file "out/redlobster/http.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([options body] [options]), :arglists ([options body] [options]), :arglists-meta (nil nil)}, :method-params ([options body] [options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists ([options body] [options])}}}